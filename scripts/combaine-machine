#!/usr/bin/env python

#
# Author: Anton Tyurin <noxiouz@yandex.ru>
#

import os
import sys
import subprocess

CLOUD_SERVER = "cocaine-server"

APPS = ("combaine@1", "aggregate@1", "parsing@1")
COMBAINER_PROC_NAME = "startCombainer"
AVAILABLE_CMDS = ('start', 'stop', 'restart')

class Dispatcher(object):

    commands = dict()

    @staticmethod
    def dispatch(command):
        cmd = Dispatcher.commands.get(command, None)
        if cmd is not None:
            cmd()
        else:
            print "Wrong command. Use one of %s" % '|'.join(AVAILABLE_CMDS)

    @staticmethod
    def command(func):
        Dispatcher.commands[func.func_name] = func
        return func


@Dispatcher.command
def start():
    print "START"
    os.system("/etc/init.d/%s reload" % CLOUD_SERVER)

@Dispatcher.command
def stop():
    for app in APPS:
        print "Stop %s" % app
        os.system("cocaine-engine-delete %s" % app)
    print "STOP"
    print "Finding %s. " % COMBAINER_PROC_NAME,
    find = subprocess.Popen(['ps', '-o', 'pid,command', 'ax'], stdout=subprocess.PIPE)
    ps_aux = find.stdout.read().splitlines()[1:]
    combaine_pids = [int(ps.split(' ')[0]) for ps in ps_aux if COMBAINER_PROC_NAME in ps]
    if len(combaine_pids) == 0:
        print "There are no startCombainer processes in this host"
        return
    
    for pid in combaine_pids:
        print "Kill %s with PID %d" % (COMBAINER_PROC_NAME, pid),
        try:
            os.kill(pid, 9)
        except OSError as err:
            print '\033[1;91m%s\033[00m' % "FAIL"
            print err
        else:
            print '\033[1;32m%10s\033[00m' % "OK"

@Dispatcher.command
def restart():
    stop()
    start()



if __name__ == "__main__":
    if len(sys.argv) == 1:
        print "Wrong command. Use one of %s" % '|'.join(AVAILABLE_CMDS)
        sys.exit(1)
    Dispatcher.dispatch(sys.argv[1])

